;; Compile Options : /TML620504F /MS /near /IC:\Users\chiya\Desktop\LAZURI~1\LIBRAR~1\SERIAL~1 /IC:\Users\chiya\Desktop\LAZURI~1\hardware\LAZURI~2 /IC:\Users\chiya\Desktop\LAZURI~1\hardware\LAZURI~2\lazurite /IC:\Users\chiya\Desktop\LAZURI~1\hardware\LAZURI~2\ML620Q~1 /IC:\Users\chiya\Desktop\LAZURI~1\hardware\LAZURI~2\ML620Q~1\clock /IC:\Users\chiya\Desktop\LAZURI~1\hardware\LAZURI~2\ML620Q~1\common /IC:\Users\chiya\Desktop\LAZURI~1\hardware\LAZURI~2\ML620Q~1\irq /IC:\Users\chiya\Desktop\LAZURI~1\hardware\LAZURI~2\ML620Q~1\lp /IC:\Users\chiya\Desktop\LAZURI~1\hardware\LAZURI~2\ML620Q~1\MCU_SM~1 /IC:\Users\chiya\Desktop\LAZURI~1\hardware\LAZURI~2\ML620Q~1\wdt /IC:\Users\chiya\Desktop\LAZURI~1\hardware\LAZURI~2\sub_ghz\ /D_ML620Q504 /DLITTLE_ENDIAN /DLAZURITE_IDE /DSUBGHZ /SS 512 /SL 65 /SD /Oa /Ot /W 3 /Faobj\ /Lv 
;; Version Number  : Ver.3.53.1
;; File Name       : serial.c

	type (ML620504F) 
	model small, near
	$$NINITVAR segment data 2h #0h
	$$NINITTAB segment table 2h any
	$$TABSerial$serial segment table 2h #0h
	$$TABSerial1$serial segment table 2h #0h
	$$TABSerial2$serial segment table 2h #0h
	$$TABSerial3$serial segment table 2h #0h
	$$_hardware_serial11_begin$serial segment code 2h #0h
	$$_hardware_serial11_end$serial segment code 2h #0h
	$$_hardware_serial12_begin$serial segment code 2h #0h
	$$_hardware_serial12_end$serial segment code 2h #0h
	$$_hardware_serial13_begin$serial segment code 2h #0h
	$$_hardware_serial13_end$serial segment code 2h #0h
	$$_hardware_serial21_begin$serial segment code 2h #0h
	$$_hardware_serial21_end$serial segment code 2h #0h
	$$_hardware_serial22_begin$serial segment code 2h #0h
	$$_hardware_serial22_end$serial segment code 2h #0h
	$$_hardware_serial23_begin$serial segment code 2h #0h
	$$_hardware_serial23_end$serial segment code 2h #0h
	$$_hardware_serial2_print$serial segment code 2h #0h
	$$_hardware_serial2_print_double$serial segment code 2h #0h
	$$_hardware_serial2_print_long$serial segment code 2h #0h
	$$_hardware_serial2_println$serial segment code 2h #0h
	$$_hardware_serial2_println_double$serial segment code 2h #0h
	$$_hardware_serial2_println_long$serial segment code 2h #0h
	$$_hardware_serial2_tx_write$serial segment code 2h #0h
	$$_hardware_serial_print$serial segment code 2h #0h
	$$_hardware_serial_print_double$serial segment code 2h #0h
	$$_hardware_serial_print_long$serial segment code 2h #0h
	$$_hardware_serial_println$serial segment code 2h #0h
	$$_hardware_serial_println_double$serial segment code 2h #0h
	$$_hardware_serial_println_long$serial segment code 2h #0h
	$$_hardware_serial_tx_write$serial segment code 2h #0h
CVERSION 3.53.1
CSGLOBAL 03H 0000H "_hardware_serial22_end" 08H 02H 5DH 01H 81H 02H 00H 00H 07H
CSGLOBAL 02H 0000H "_hardware_serial2_tx_write" 08H 02H 65H 01H 81H 08H 00H 00H 01H
CSGLOBAL 03H 0000H "_hardware_serial13_end" 08H 02H 51H 01H 81H 02H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial_println" 08H 02H 53H 01H 81H 02H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial2_print" 08H 02H 5FH 01H 81H 06H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial_print_double" 08H 02H 56H 01H 83H 34H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial_println_double" 08H 02H 57H 01H 83H 34H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial_print_long" 08H 02H 54H 01H 83H 2aH 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial11_end" 08H 02H 4DH 01H 81H 02H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial2_println_long" 08H 02H 62H 01H 83H 2aH 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial2_println" 08H 02H 60H 01H 81H 02H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial12_end" 08H 02H 4FH 01H 81H 02H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial21_begin" 08H 02H 59H 01H 81H 06H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial22_begin" 08H 02H 5AH 01H 81H 06H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial23_begin" 08H 02H 5BH 01H 81H 06H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial11_begin" 08H 02H 4CH 01H 81H 0aH 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial12_begin" 08H 02H 4EH 01H 81H 0aH 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial13_begin" 08H 02H 50H 01H 81H 0aH 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial2_print_long" 08H 02H 61H 01H 83H 2aH 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial_println_long" 08H 02H 55H 01H 83H 2aH 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial23_end" 08H 02H 5EH 01H 81H 02H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial2_print_double" 08H 02H 63H 01H 83H 34H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial2_println_double" 08H 02H 64H 01H 83H 34H 00H 00H 07H
CSGLOBAL 02H 0000H "_hardware_serial_tx_write" 08H 02H 58H 01H 81H 08H 00H 00H 01H
CSGLOBAL 03H 0000H "_hardware_serial21_end" 08H 02H 5CH 01H 81H 02H 00H 00H 07H
CSGLOBAL 03H 0000H "_hardware_serial_print" 08H 02H 52H 01H 81H 06H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 001EH 000FH 0000001EH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 38H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "end" 0AH 03H 00H 02H 39H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 3AH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 3BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "peek" 0AH 03H 00H 02H 3CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "flush" 0AH 03H 00H 02H 3DH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000CH "print" 0AH 03H 00H 02H 3EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "println" 0AH 03H 00H 02H 3FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000010H "print_long" 0AH 03H 00H 02H 40H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000012H "println_long" 0AH 03H 00H 02H 41H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000014H "print_double" 0AH 03H 00H 02H 42H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000016H "println_double" 0AH 03H 00H 02H 43H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000018H "write" 0AH 03H 00H 02H 44H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000001AH "write_byte" 0AH 03H 00H 02H 45H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000001CH "tx_available" 0AH 03H 00H 02H 46H 01H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 001DH 001AH 00000034H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 1AH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "remove" 0AH 03H 00H 02H 1BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "begin" 0AH 03H 00H 02H 1CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "close" 0AH 03H 00H 02H 1DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "send" 0AH 03H 00H 02H 1FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "send64le" 0AH 03H 00H 02H 21H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "send64be" 0AH 03H 00H 02H 23H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "rxEnable" 0AH 03H 00H 02H 25H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000010H "setPromiscuous" 0AH 03H 00H 02H 26H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000012H "setAckReq" 0AH 03H 00H 02H 27H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000014H "setBroadcastEnb" 0AH 03H 00H 02H 28H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000016H "rxDisable" 0AH 03H 00H 02H 29H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000018H "readData" 0AH 03H 00H 02H 2AH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001AH "getMyAddress" 0AH 03H 00H 02H 2BH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 0000001CH "getMyAddr64" 0AH 03H 00H 02H 2CH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001EH "setMyAddress" 0AH 03H 00H 02H 2DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000020H "getStatus" 0AH 03H 00H 02H 2EH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000022H "msgOut" 0AH 03H 00H 02H 2FH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000024H "setSendMode" 0AH 03H 00H 02H 30H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000026H "getSendMode" 0AH 03H 00H 02H 31H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000028H "decMac" 0AH 03H 00H 02H 32H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000002AH "setKey" 0AH 03H 00H 02H 33H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000002CH "setEnhanceAck" 0AH 03H 00H 02H 34H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000002EH "getEnhanceAck" 0AH 03H 00H 02H 35H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000030H "setAckTxInterval" 0AH 03H 00H 02H 36H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000032H "getEdValue" 0AH 03H 00H 02H 37H 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0011H 000BH 00000002H "mac_fc_alignment"
CSTRUCTMEM 52H 00000003H 00000000H "frame_type" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "sec_enb" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "pending" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "ack_req" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "panid_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "nop" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000008H "seq_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000009H "ielist" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000AH "dst_addr_type" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000CH "frame_ver" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000EH "src_addr_type" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 001CH 000BH 00000020H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "mac_header" 04H 00H 06H 12H 00H
CSTRUCTMEM 42H 00000001H 00000002H "seq_num" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "dst_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "dst_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "src_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000010H "src_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000018H "raw" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001AH "raw_len" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001CH "payload" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001EH "payload_len" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001BH 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "addrType" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "senseTime" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "txInterval" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000006H "myAddress" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000008H "ccaWait" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001AH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000002H "status" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0008H 0003H 00000006H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "data" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "len" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "size" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0009H 0004H 00000010H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "id" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "buf_size" 02H 00H 08H
CSTRUCTMEM 43H 00000006H 00000004H "in" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000000AH "out" 04H 00H 05H 08H 00H
CSTRUCTTAG 0000H 0000H 000CH 0015H 00000028H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "condition" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "ccaRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "ccaBe" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "ccaCount" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "txPower" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "txMode" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000009H "sequnceNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000AH "resendingNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000BH "rxOnEnable" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "promiscuousMode" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "ack_timeout" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000010H "status" 02H 00H 01H
CSTRUCTMEM 42H 00000004H 00000012H "total_send_bytes" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 00000016H "start_send_time" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 0000001AH "last_send_time" 02H 00H 02H
CSTRUCTMEM 43H 00000002H 0000001EH "phy" 06H 03H 00H 00H 05H 09H 00H
CSTRUCTMEM 43H 00000006H 00000020H "ack" 04H 00H 05H 08H 00H
CSTRUCTMEM 42H 00000002H 00000026H "tx_ack_interval" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 0015H 0005H 0000000EH "mac_addr"
CSTRUCTMEM 42H 00000001H 00000000H "pan_coord" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "lddn_addr" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 000FH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "enb" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "data" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 000EH 0003H 0000000EH "fc_addr"
CSTRUCTMEM 43H 00000004H 00000000H "panid" 04H 00H 05H 0FH 00H
CSTRUCTMEM 42H 00000001H 00000004H "addr_type" 02H 00H 00H
CSTRUCTMEM 43H 00000008H 00000006H "addr" 04H 00H 06H 10H 00H
CSTRUCTTAG 0000H 0000H 0013H 000AH 00000036H "mac_header"
CSTRUCTMEM 43H 00000002H 00000000H "fc" 04H 00H 06H 12H 00H
CSTRUCTMEM 43H 0000000EH 00000002H "dst" 04H 00H 05H 0EH 00H
CSTRUCTMEM 43H 0000000EH 00000010H "src" 04H 00H 05H 0EH 00H
CSTRUCTMEM 42H 00000001H 0000001EH "seq" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000001FH "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000020H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000006H 00000022H "payload" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 00000028H "raw" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000002EH "input" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000002H 00000034H "payload_offset" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0014H 000BH 00000014H "rf_param"
CSTRUCTMEM 42H 00000001H 00000000H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "cca_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "cca_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "cca_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "tx_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "tx_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "tx_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000004H 00000008H "ack_timeout" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 0000000CH "cca_level" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000010H "tx_power" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0016H 000AH 000000FAH "mach_param"
CSTRUCTMEM 43H 00000002H 00000000H "macl" 06H 03H 00H 00H 05H 0CH 00H
CSTRUCTMEM 43H 0000000EH 00000002H "my_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 0000000EH 00000010H "coord_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 00000036H 0000001EH "tx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 00000054H "rx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 0000008AH "rx_prev" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 000000C0H "ack" 04H 00H 05H 13H 00H
CSTRUCTMEM 42H 00000001H 000000F6H "coordinator" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 000000F7H "sending" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 000000F8H "rf" 06H 03H 00H 00H 05H 14H 00H
CSTRUCTTAG 0000H 0000H 000DH 0004H 0000000EH "ieee802154_my_addr"
CSTRUCTMEM 42H 00000002H 00000000H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000002H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000004H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "pan_coord" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0006H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0005H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0004H 0005H 0000000AH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "write" 0AH 03H 00H 02H 89H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "read" 0AH 03H 00H 02H 8AH 00H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "erase" 0AH 03H 00H 02H 8BH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000006H "write_byte" 0AH 03H 00H 02H 8CH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000008H "read_byte" 0AH 03H 00H 02H 8DH 00H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0003H 0008H 00000010H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 76H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "p" 0AH 03H 00H 02H 77H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "l" 0AH 03H 00H 02H 78H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "f" 0AH 03H 00H 02H 79H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "d" 0AH 03H 00H 02H 7AH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "ln" 0AH 03H 00H 02H 7BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "status" 0AH 03H 00H 02H 7CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "len" 0AH 03H 00H 02H 7DH 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0001H 0005H 00000008H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "max_length" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "buf" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "wr_p" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "rd_p" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "length" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0012H 0003H 00000002H "mac_frame_control"
CUNIONMEM 42H 00000002H "fc8" 05H 01H 02H 00H 00H 00H
CUNIONMEM 42H 00000002H "fc16" 02H 00H 08H
CUNIONMEM 43H 00000002H "fc_bit" 04H 00H 05H 11H 00H
CUNIONTAG 0000H 0000H 0010H 0003H 00000008H "_Notag"
CUNIONMEM 42H 00000002H "short_addr" 02H 00H 08H
CUNIONMEM 42H 00000002H "lddn_addr" 02H 00H 08H
CUNIONMEM 42H 00000008H "ieee_addr" 05H 01H 08H 00H 00H 00H
CUNIONTAG 0000H 0000H 0007H 0002H 00000008H "_Notag"
CUNIONMEM 42H 00000008H "_W" 05H 01H 04H 00H 00H 08H
CUNIONMEM 43H 00000008H "_D" 02H 00H 04H
CENUMTAG 0000H 0000H 0019H 0002H "_Notag"
CENUMMEM 00000014H "SUBGHZ_PWR_20MW"
CENUMMEM 00000001H "SUBGHZ_PWR_1MW"
CENUMTAG 0000H 0000H 0018H 0002H "_Notag"
CENUMMEM 00000064H "SUBGHZ_100KBPS"
CENUMMEM 00000032H "SUBGHZ_50KBPS"
CENUMTAG 0000H 0000H 0017H 0012H "_Notag"
CENUMMEM 00000000H "SUBGHZ_OK"
CENUMMEM 00000001H "SUBGHZ_RESET_FAIL"
CENUMMEM 00000002H "SUBGHZ_SETUP_FAIL"
CENUMMEM 00000003H "SUBGHZ_SLEEP_FAIL"
CENUMMEM 00000004H "SUBGHZ_WAKEUP_FAIL"
CENUMMEM 00000005H "SUBGHZ_MYADDR_FAIL"
CENUMMEM 00000006H "SUBGHZ_SETFIL_FAIL"
CENUMMEM 00000007H "SUBGHZ_TX_COMP_FAIL"
CENUMMEM 00000008H "SUBGHZ_TX_FAIL"
CENUMMEM 00000009H "SUBGHZ_TX_CCA_FAIL"
CENUMMEM 0000000AH "SUBGHZ_TX_ACK_FAIL"
CENUMMEM 0000000BH "SUBGHZ_RX_ENB_FAIL"
CENUMMEM 0000000CH "SUBGHZ_RX_DIS_FAIL"
CENUMMEM 0000000DH "SUBGHZ_RX_COMP_FAIL"
CENUMMEM 0000000EH "SUBGHZ_PANID"
CENUMMEM 0000000FH "SUBGHZ_ERR_ADDRTYPE"
CENUMMEM 00000010H "SUBGHZ_TTL_SEND_OVR"
CENUMMEM 00000011H "SUBGHZ_DUMMY"
CENUMTAG 0000H 0000H 000BH 000EH "_Notag"
CENUMMEM 00000000H "SUBGHZ_ST_TX_START"
CENUMMEM 00000001H "SUBGHZ_ST_CCA_FAST"
CENUMMEM 00000002H "SUBGHZ_ST_CCA_IDLE_DETECT"
CENUMMEM 00000003H "SUBGHZ_ST_CCA_ABORT"
CENUMMEM 00000004H "SUBGHZ_ST_CCA_RETRY"
CENUMMEM 00000005H "SUBGHZ_ST_CCA_FAILURE"
CENUMMEM 00000006H "SUBGHZ_ST_CCA_DONE"
CENUMMEM 00000007H "SUBGHZ_ST_TX_DONE"
CENUMMEM 00000008H "SUBGHZ_ST_TX_ACK_TIMEOUT"
CENUMMEM 00000009H "SUBGHZ_ST_TX_ACK_DONE"
CENUMMEM 0000000AH "SUBGHZ_ST_RX_START"
CENUMMEM 0000000BH "SUBGHZ_ST_RX_DONE"
CENUMMEM 0000000CH "SUBGHZ_ST_RX_ACK_DONE"
CENUMMEM 0000000DH "SUBGHZ_ST_NONE"
CENUMTAG 0000H 0000H 000AH 0005H "_Notag"
CENUMMEM 00000000H "CCA_IDLE"
CENUMMEM 00000001H "CCA_FAST"
CENUMMEM 00000002H "IDLE_DETECT"
CENUMMEM 00000003H "CCA_RETRY"
CENUMMEM 00000004H "CCA_FAILURE"
CENUMTAG 0000H 0000H 0002H 0003H "_Notag"
CENUMMEM 00000001H "HALT_I2C1_END"
CENUMMEM 00000002H "HALT_I2C0_END"
CENUMMEM 00000003H "HALT_DELAY"
CTYPEDEF 0000H 0000H 43H "SUBGHZ_POWER" 04H 00H 0AH 19H 00H
CTYPEDEF 0000H 0000H 01H "_Dconst" 04H 00H 06H 07H 00H
CTYPEDEF 0000H 0000H 43H "SubGHz_CTRL" 04H 00H 05H 1DH 00H
CTYPEDEF 0000H 0000H 43H "INT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "PHY_PARAM" 04H 00H 05H 09H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_PARAM" 04H 00H 05H 1BH 00H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MSG" 04H 00H 0AH 17H 00H
CTYPEDEF 0000H 0000H 42H "bool" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "t_print" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 42H "byte" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "INT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "INT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_STATE" 04H 00H 0AH 0BH 00H
CTYPEDEF 0000H 0000H 43H "MACL_PARAM" 04H 00H 05H 0CH 00H
CTYPEDEF 0000H 0000H 42H "BOOLEAN" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_PARAM" 04H 00H 05H 1CH 00H
CTYPEDEF 0000H 0000H 42H "UCHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_STATUS" 04H 00H 05H 1AH 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "uint8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_RATE" 04H 00H 0AH 18H 00H
CTYPEDEF 0000H 0000H 43H "BUFFER" 04H 00H 05H 08H 00H
CTYPEDEF 0000H 0000H 43H "int8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "int16_t" 02H 00H 08H
CTYPEDEF 0000H 0000H 43H "int32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "UINT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "DATAFLASH" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 43H "FIFO_CTRL" 04H 00H 05H 01H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 92H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 91H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "CHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HardwareSerial" 04H 00H 05H 1EH 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 94H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 93H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "boolean" 02H 00H 00H
CTYPEDEF 0000H 0000H 42H "word" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "BOOL" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HALT_EVENT" 04H 00H 0AH 02H 00H
CTYPEDEF 0000H 0000H 43H "CCA_STATE" 04H 00H 0AH 0AH 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 05H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 06H 00H
CTYPEDEF 0000H 0000H 42H "uint32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CTYPEDEF 0000H 0000H 42H "uint16_t" 02H 00H 08H
CGLOBAL 01H 01H 001EH "Serial1" 04H 00H 05H 1EH 00H
CGLOBAL 01H 01H 001EH "Serial2" 04H 00H 05H 1EH 00H
CGLOBAL 01H 01H 001EH "Serial3" 04H 00H 05H 1EH 00H
CGLOBAL 01H 01H 001EH "Serial" 04H 00H 05H 1EH 00H
CFILE 0001H 0000007BH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\common.h"
CFILE 0002H 00000F42H "C:\\Users\\chiya\\Desktop\\LazuriteIDE\\bin\\U8Dev\\Inc\\ml620504F.h"
CFILE 0003H 000000C9H "C:\\Users\\chiya\\Desktop\\LazuriteIDE\\bin\\U8Dev\\Inc\\string.h"
CFILE 0004H 0000007AH "C:\\Users\\chiya\\Desktop\\LazuriteIDE\\bin\\U8Dev\\Inc\\yvals.h"
CFILE 0005H 00000045H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\common\\rdwr_reg.h"
CFILE 0006H 00000053H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\driver_uart.h"
CFILE 0007H 00000022H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\MCU_SM~1\\mcu.h"
CFILE 0008H 00000045H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\serial.h"
CFILE 0009H 0000003EH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\lazurite.h"
CFILE 000AH 0000002BH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\analogio.h"
CFILE 000BH 0000002BH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\digitalio.h"
CFILE 000CH 00000041H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\pin_assignment.h"
CFILE 000DH 00000051H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\lazurite_system.h"
CFILE 000EH 0000002DH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\print.h"
CFILE 000FH 0000002DH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\wiring_shift.h"
CFILE 0010H 0000002CH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\wiring_pulse.h"
CFILE 0011H 0000002DH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\WInterrupts.h"
CFILE 0012H 0000002DH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\WMath.h"
CFILE 0013H 00000031H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\flash.h"
CFILE 0014H 0000002DH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\tone.h"
CFILE 0015H 000000DAH "C:\\Users\\chiya\\Desktop\\LazuriteIDE\\bin\\U8Dev\\Inc\\stdlib.h"
CFILE 0016H 0000004FH "C:\\Users\\chiya\\Desktop\\LazuriteIDE\\bin\\U8Dev\\Inc\\math.h"
CFILE 0017H 00000081H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\subghz_api.h"
CFILE 0018H 0000009BH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\mach.h"
CFILE 0019H 00000064H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\macl.h"
CFILE 001AH 00000032H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\common_subghz.h"
CFILE 001BH 00000060H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\phy.h"
CFILE 001CH 0000003DH "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\endian.h"
CFILE 001DH 00000040H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\wdt\\wdt.h"
CFILE 001EH 00000022H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\lp\\lp_manage.h"
CFILE 0000H 00000176H "C:\\Users\\chiya\\Desktop\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\serial.c"

	rseg $$_hardware_serial11_begin$serial
CFUNCTION 332

__hardware_serial11_begin	:
CBLOCK 332 1 154

;;{
CLINEA 0000H 0001H 009AH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	mov	er8,	er0
	mov	er10,	er2
CBLOCK 332 2 154
CRET 0004H
CARGUMENT 46H 0004H 2928H "baud" 02H 00H 02H

;;	uart_gpio_init(0);
CLINEA 0000H 0001H 009BH 0002H 0013H
	mov	r0,	#00h
	bl	_uart_gpio_init

;;	uart_begin(baud,NULL,NULL);
CLINEA 0000H 0001H 009CH 0002H 001CH
	mov	er0,	#0 
	push	er0
	push	er0
	mov	er0,	er8
	mov	er2,	er10
	bl	_uart_begin
	add	sp,	#4 
CBLOCKEND 332 2 157

;;}
CLINEA 0000H 0001H 009DH 0001H 0001H
	pop	xr8
	pop	pc
CBLOCKEND 332 1 157
CFUNCTIONEND 332


	rseg $$_hardware_serial11_end$serial
CFUNCTION 333

__hardware_serial11_end	:
CBLOCK 333 1 159

;;{
CLINEA 0000H 0001H 009FH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 333 2 159
CRET 0000H

;;	uart_gpio_end(0);
CLINEA 0000H 0001H 00A0H 0002H 0012H
	mov	r0,	#00h
	bl	_uart_gpio_end

;;	uart_end();
CLINEA 0000H 0001H 00A1H 0002H 000CH
	bl	_uart_end
CBLOCKEND 333 2 162

;;}
CLINEA 0000H 0001H 00A2H 0001H 0001H
	pop	pc
CBLOCKEND 333 1 162
CFUNCTIONEND 333


	rseg $$_hardware_serial12_begin$serial
CFUNCTION 334

__hardware_serial12_begin	:
CBLOCK 334 1 164

;;{
CLINEA 0000H 0001H 00A4H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	mov	er8,	er0
	mov	er10,	er2
CBLOCK 334 2 164
CRET 0004H
CARGUMENT 46H 0004H 2928H "baud" 02H 00H 02H

;;	uart_gpio_init(1);
CLINEA 0000H 0001H 00A5H 0002H 0013H
	mov	r0,	#01h
	bl	_uart_gpio_init

;;	uart_begin(baud,NULL,NULL);
CLINEA 0000H 0001H 00A6H 0002H 001CH
	mov	er0,	#0 
	push	er0
	push	er0
	mov	er0,	er8
	mov	er2,	er10
	bl	_uart_begin
	add	sp,	#4 
CBLOCKEND 334 2 167

;;}
CLINEA 0000H 0001H 00A7H 0001H 0001H
	pop	xr8
	pop	pc
CBLOCKEND 334 1 167
CFUNCTIONEND 334


	rseg $$_hardware_serial12_end$serial
CFUNCTION 335

__hardware_serial12_end	:
CBLOCK 335 1 169

;;{
CLINEA 0000H 0001H 00A9H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 335 2 169
CRET 0000H

;;	uart_gpio_end(1);
CLINEA 0000H 0001H 00AAH 0002H 0012H
	mov	r0,	#01h
	bl	_uart_gpio_end

;;	uart_end();
CLINEA 0000H 0001H 00ABH 0002H 000CH
	bl	_uart_end
CBLOCKEND 335 2 172

;;}
CLINEA 0000H 0001H 00ACH 0001H 0001H
	pop	pc
CBLOCKEND 335 1 172
CFUNCTIONEND 335


	rseg $$_hardware_serial13_begin$serial
CFUNCTION 336

__hardware_serial13_begin	:
CBLOCK 336 1 174

;;{
CLINEA 0000H 0001H 00AEH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	mov	er8,	er0
	mov	er10,	er2
CBLOCK 336 2 174
CRET 0004H
CARGUMENT 46H 0004H 2928H "baud" 02H 00H 02H

;;	uart_gpio_init(2);
CLINEA 0000H 0001H 00AFH 0002H 0013H
	mov	r0,	#02h
	bl	_uart_gpio_init

;;	uart_begin(baud,NULL,NULL);
CLINEA 0000H 0001H 00B0H 0002H 001CH
	mov	er0,	#0 
	push	er0
	push	er0
	mov	er0,	er8
	mov	er2,	er10
	bl	_uart_begin
	add	sp,	#4 
CBLOCKEND 336 2 177

;;}
CLINEA 0000H 0001H 00B1H 0001H 0001H
	pop	xr8
	pop	pc
CBLOCKEND 336 1 177
CFUNCTIONEND 336


	rseg $$_hardware_serial13_end$serial
CFUNCTION 337

__hardware_serial13_end	:
CBLOCK 337 1 179

;;{
CLINEA 0000H 0001H 00B3H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 337 2 179
CRET 0000H

;;	uart_gpio_end(2);
CLINEA 0000H 0001H 00B4H 0002H 0012H
	mov	r0,	#02h
	bl	_uart_gpio_end

;;	uart_end();
CLINEA 0000H 0001H 00B5H 0002H 000CH
	bl	_uart_end
CBLOCKEND 337 2 182

;;}
CLINEA 0000H 0001H 00B6H 0001H 0001H
	pop	pc
CBLOCKEND 337 1 182
CFUNCTIONEND 337


	rseg $$_hardware_serial21_begin$serial
CFUNCTION 345

__hardware_serial21_begin	:
CBLOCK 345 1 185

;;{
CLINEA 0000H 0001H 00B9H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	mov	er8,	er0
	mov	er10,	er2
CBLOCK 345 2 185
CRET 0004H
CARGUMENT 46H 0004H 2928H "baud" 02H 00H 02H

;;	uart_gpio_init(3);
CLINEA 0000H 0001H 00BAH 0002H 0013H
	mov	r0,	#03h
	bl	_uart_gpio_init

;;	uartf_begin(baud);
CLINEA 0000H 0001H 00BBH 0002H 0013H
	mov	er0,	er8
	mov	er2,	er10
	bl	_uartf_begin
CBLOCKEND 345 2 188

;;}
CLINEA 0000H 0001H 00BCH 0001H 0001H
	pop	xr8
	pop	pc
CBLOCKEND 345 1 188
CFUNCTIONEND 345


	rseg $$_hardware_serial22_begin$serial
CFUNCTION 346

__hardware_serial22_begin	:
CBLOCK 346 1 190

;;{
CLINEA 0000H 0001H 00BEH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	mov	er8,	er0
	mov	er10,	er2
CBLOCK 346 2 190
CRET 0004H
CARGUMENT 46H 0004H 2928H "baud" 02H 00H 02H

;;	uart_gpio_init(4);
CLINEA 0000H 0001H 00BFH 0002H 0013H
	mov	r0,	#04h
	bl	_uart_gpio_init

;;	uartf_begin(baud);
CLINEA 0000H 0001H 00C0H 0002H 0013H
	mov	er0,	er8
	mov	er2,	er10
	bl	_uartf_begin
CBLOCKEND 346 2 193

;;}
CLINEA 0000H 0001H 00C1H 0001H 0001H
	pop	xr8
	pop	pc
CBLOCKEND 346 1 193
CFUNCTIONEND 346


	rseg $$_hardware_serial23_begin$serial
CFUNCTION 347

__hardware_serial23_begin	:
CBLOCK 347 1 195

;;{
CLINEA 0000H 0001H 00C3H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	mov	er8,	er0
	mov	er10,	er2
CBLOCK 347 2 195
CRET 0004H
CARGUMENT 46H 0004H 2928H "baud" 02H 00H 02H

;;	uart_gpio_init(5);
CLINEA 0000H 0001H 00C4H 0002H 0013H
	mov	r0,	#05h
	bl	_uart_gpio_init

;;	uartf_begin(baud);
CLINEA 0000H 0001H 00C5H 0002H 0013H
	mov	er0,	er8
	mov	er2,	er10
	bl	_uartf_begin
CBLOCKEND 347 2 198

;;}
CLINEA 0000H 0001H 00C6H 0001H 0001H
	pop	xr8
	pop	pc
CBLOCKEND 347 1 198
CFUNCTIONEND 347


	rseg $$_hardware_serial21_end$serial
CFUNCTION 348

__hardware_serial21_end	:
CBLOCK 348 1 200

;;{
CLINEA 0000H 0001H 00C8H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 348 2 200
CRET 0000H

;;	uart_gpio_end(3);
CLINEA 0000H 0001H 00C9H 0002H 0012H
	mov	r0,	#03h
	bl	_uart_gpio_end

;;	uartf_end();
CLINEA 0000H 0001H 00CAH 0002H 000DH
	bl	_uartf_end
CBLOCKEND 348 2 203

;;}
CLINEA 0000H 0001H 00CBH 0001H 0001H
	pop	pc
CBLOCKEND 348 1 203
CFUNCTIONEND 348


	rseg $$_hardware_serial22_end$serial
CFUNCTION 349

__hardware_serial22_end	:
CBLOCK 349 1 205

;;{
CLINEA 0000H 0001H 00CDH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 349 2 205
CRET 0000H

;;	uart_gpio_end(4);
CLINEA 0000H 0001H 00CEH 0002H 0012H
	mov	r0,	#04h
	bl	_uart_gpio_end

;;	uartf_end();
CLINEA 0000H 0001H 00CFH 0002H 000DH
	bl	_uartf_end
CBLOCKEND 349 2 208

;;}
CLINEA 0000H 0001H 00D0H 0001H 0001H
	pop	pc
CBLOCKEND 349 1 208
CFUNCTIONEND 349


	rseg $$_hardware_serial23_end$serial
CFUNCTION 350

__hardware_serial23_end	:
CBLOCK 350 1 210

;;{
CLINEA 0000H 0001H 00D2H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 350 2 210
CRET 0000H

;;	uart_gpio_end(5);
CLINEA 0000H 0001H 00D3H 0002H 0012H
	mov	r0,	#05h
	bl	_uart_gpio_end

;;	uartf_end();
CLINEA 0000H 0001H 00D4H 0002H 000DH
	bl	_uartf_end
CBLOCKEND 350 2 213

;;}
CLINEA 0000H 0001H 00D5H 0001H 0001H
	pop	pc
CBLOCKEND 350 1 213
CFUNCTIONEND 350


	rseg $$_hardware_serial_tx_write$serial
CFUNCTION 344

__hardware_serial_tx_write	:
CBLOCK 344 1 220

;;{
CLINEA 0000H 0001H 00DCH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	push	er4
	mov	er8,	er0
	mov	er10,	er2
CBLOCK 344 2 220
CRET 0006H
CARGUMENT 47H 0002H 0028H "data" 04H 03H 00H 00H 00H
CARGUMENT 46H 0002H 0029H "quantity" 02H 00H 01H
CLOCAL 46H 0002H 0026H 0002H "n" 02H 00H 01H

;;	for(n=0;n<quantity;n++)
CLINEA 0000H 0001H 00DFH 0002H 0018H
	mov	er4,	#0 	;; _ln$0
	bal	_$L18
_$L15 :
CBLOCK 344 3 224

;;		if(uart_tx_write(data[n]) != 1)
CLINEA 0000H 0001H 00E1H 0003H 0021H
	mov	er0,	er8
	add	er0,	er4
	l	r0,	[er0]
	bl	_uart_tx_write
	cmp	r0,	#01h
	cmpc	r1,	#00h
	bne	_$L14
CBLOCK 344 4 226

;;			break;
CLINEA 0000H 0001H 00E3H 0004H 0009H
CBLOCKEND 344 4 228

;;		}
CLINEA 0000H 0000H 00E4H 0003H 0003H
CBLOCKEND 344 3 229

;;	for(n=0;n<quantity;n++)
CLINEA 0000H 0000H 00DFH 0002H 0018H
	add	er4,	#1 
_$L18 :
	cmp	er4,	er10
	blt	_$L15

;;	}
CLINEA 0000H 0000H 00E5H 0002H 0002H
_$L14 :

;;	return n;
CLINEA 0000H 0001H 00E7H 0002H 000AH
	mov	er0,	er4
CBLOCKEND 344 2 232

;;}
CLINEA 0000H 0000H 00E8H 0001H 0001H
	pop	er4
	pop	xr8
	pop	pc
CBLOCKEND 344 1 232
CFUNCTIONEND 344


	rseg $$_hardware_serial2_tx_write$serial
CFUNCTION 357

__hardware_serial2_tx_write	:
CBLOCK 357 1 235

;;{
CLINEA 0000H 0001H 00EBH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	push	er4
	mov	er8,	er0
	mov	er10,	er2
CBLOCK 357 2 235
CRET 0006H
CARGUMENT 47H 0002H 0028H "data" 04H 03H 00H 00H 00H
CARGUMENT 46H 0002H 0029H "quantity" 02H 00H 01H
CLOCAL 46H 0002H 0026H 0002H "n" 02H 00H 01H

;;	for(n=0;n<quantity;n++)
CLINEA 0000H 0001H 00EEH 0002H 0018H
	mov	er4,	#0 	;; _ln$0
	bal	_$L27
_$L24 :
CBLOCK 357 3 239

;;		if(uartf_tx_write(data[n]) != 1)
CLINEA 0000H 0001H 00F0H 0003H 0022H
	mov	er0,	er8
	add	er0,	er4
	l	r0,	[er0]
	bl	_uartf_tx_write
	cmp	r0,	#01h
	cmpc	r1,	#00h
	bne	_$L23
CBLOCK 357 4 241

;;			break;
CLINEA 0000H 0001H 00F2H 0004H 0009H
CBLOCKEND 357 4 243

;;		}
CLINEA 0000H 0000H 00F3H 0003H 0003H
CBLOCKEND 357 3 244

;;	for(n=0;n<quantity;n++)
CLINEA 0000H 0000H 00EEH 0002H 0018H
	add	er4,	#1 
_$L27 :
	cmp	er4,	er10
	blt	_$L24

;;	}
CLINEA 0000H 0000H 00F4H 0002H 0002H
_$L23 :

;;	return n;
CLINEA 0000H 0001H 00F6H 0002H 000AH
	mov	er0,	er4
CBLOCKEND 357 2 247

;;}
CLINEA 0000H 0000H 00F7H 0001H 0001H
	pop	er4
	pop	xr8
	pop	pc
CBLOCKEND 357 1 247
CFUNCTIONEND 357


	rseg $$_hardware_serial_println_long$serial
CFUNCTION 341

__hardware_serial_println_long	:
CBLOCK 341 1 251

;;{
CLINEA 0000H 0001H 00FBH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_fmt$4	set	4
	_tmp_c$0	set	-34
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-034
CBLOCK 341 2 251
CRET 0024H
CARGUMENT 47H 0004H 2524H "data" 02H 00H 02H
CARGUMENT 42H 0001H 0004H "fmt" 02H 00H 00H
CLOCAL 43H 0021H 0022H 0002H "tmp_c" 05H 01H 21H 00H 00H 00H

;;	printNumber(tmp_c, data,fmt);			// convert long data to charactor
CLINEA 0000H 0001H 00FDH 0002H 0042H
	push	xr0
	l	r2,	_fmt$4[fp]
	mov	er0,	fp
	add	er0,	#-34
	bl	_printNumber
	add	sp,	#4 

;;	_hardware_serial_println(tmp_c);		// send data though uart
CLINEA 0000H 0001H 00FEH 0002H 003BH
	mov	er0,	fp
	add	er0,	#-34
	bl	__hardware_serial_println
CBLOCKEND 341 2 256

;;}
CLINEA 0000H 0000H 0100H 0001H 0001H
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 341 1 256
CFUNCTIONEND 341


	rseg $$_hardware_serial2_println_long$serial
CFUNCTION 354

__hardware_serial2_println_long	:
CBLOCK 354 1 259

;;{
CLINEA 0000H 0001H 0103H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_fmt$4	set	4
	_tmp_c$0	set	-34
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-034
CBLOCK 354 2 259
CRET 0024H
CARGUMENT 47H 0004H 2524H "data" 02H 00H 02H
CARGUMENT 42H 0001H 0004H "fmt" 02H 00H 00H
CLOCAL 43H 0021H 0022H 0002H "tmp_c" 05H 01H 21H 00H 00H 00H

;;	printNumber(tmp_c, data,fmt);			// convert long data to charactor
CLINEA 0000H 0001H 0105H 0002H 0042H
	push	xr0
	l	r2,	_fmt$4[fp]
	mov	er0,	fp
	add	er0,	#-34
	bl	_printNumber
	add	sp,	#4 

;;	_hardware_serial2_println(tmp_c);		// send data though uart
CLINEA 0000H 0001H 0106H 0002H 003CH
	mov	er0,	fp
	add	er0,	#-34
	bl	__hardware_serial2_println
CBLOCKEND 354 2 264

;;}
CLINEA 0000H 0000H 0108H 0001H 0001H
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 354 1 264
CFUNCTIONEND 354


	rseg $$_hardware_serial_print_long$serial
CFUNCTION 340

__hardware_serial_print_long	:
CBLOCK 340 1 268

;;{
CLINEA 0000H 0001H 010CH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_fmt$4	set	4
	_tmp_c$0	set	-34
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-034
CBLOCK 340 2 268
CRET 0024H
CARGUMENT 47H 0004H 2524H "data" 02H 00H 02H
CARGUMENT 42H 0001H 0004H "fmt" 02H 00H 00H
CLOCAL 43H 0021H 0022H 0002H "tmp_c" 05H 01H 21H 00H 00H 00H

;;	printNumber(tmp_c,data,fmt);
CLINEA 0000H 0001H 010EH 0002H 001DH
	push	xr0
	l	r2,	_fmt$4[fp]
	mov	er0,	fp
	add	er0,	#-34
	bl	_printNumber
	add	sp,	#4 

;;	_hardware_serial_print(tmp_c);
CLINEA 0000H 0001H 010FH 0002H 001FH
	mov	er0,	fp
	add	er0,	#-34
	bl	__hardware_serial_print
CBLOCKEND 340 2 272

;;}
CLINEA 0000H 0001H 0110H 0001H 0001H
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 340 1 272
CFUNCTIONEND 340


	rseg $$_hardware_serial2_print_long$serial
CFUNCTION 353

__hardware_serial2_print_long	:
CBLOCK 353 1 275

;;{
CLINEA 0000H 0001H 0113H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_fmt$4	set	4
	_tmp_c$0	set	-34
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-034
CBLOCK 353 2 275
CRET 0024H
CARGUMENT 47H 0004H 2524H "data" 02H 00H 02H
CARGUMENT 42H 0001H 0004H "fmt" 02H 00H 00H
CLOCAL 43H 0021H 0022H 0002H "tmp_c" 05H 01H 21H 00H 00H 00H

;;	printNumber(tmp_c,data,fmt);
CLINEA 0000H 0001H 0115H 0002H 001DH
	push	xr0
	l	r2,	_fmt$4[fp]
	mov	er0,	fp
	add	er0,	#-34
	bl	_printNumber
	add	sp,	#4 

;;	_hardware_serial2_print(tmp_c);
CLINEA 0000H 0001H 0116H 0002H 0020H
	mov	er0,	fp
	add	er0,	#-34
	bl	__hardware_serial2_print
CBLOCKEND 353 2 279

;;}
CLINEA 0000H 0001H 0117H 0001H 0001H
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 353 1 279
CFUNCTIONEND 353


	rseg $$_hardware_serial_println_double$serial
CFUNCTION 343

__hardware_serial_println_double	:
CBLOCK 343 1 285

;;{
CLINEA 0000H 0001H 011DH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_data$2	set	4
	_tmp_c$0	set	-34
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-034
	push	xr4
	push	er8
	mov	r8,	r0
CBLOCK 343 2 285
CRET 002AH
CARGUMENT 46H 0001H 001CH "digit" 02H 00H 00H
CARGUMENT 43H 0008H 0004H "data" 02H 00H 04H
CLOCAL 43H 0021H 0022H 0002H "tmp_c" 05H 01H 21H 00H 00H 00H

;;	printFloat(tmp_c, data,digit);
CLINEA 0000H 0001H 011FH 0002H 001FH
	lea	_data$2[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r2,	r8
	mov	er0,	fp
	add	er0,	#-34
	bl	_printFloat
	add	sp,	#8 

;;	_hardware_serial_println(tmp_c);
CLINEA 0000H 0001H 0120H 0002H 0021H
	mov	er0,	fp
	add	er0,	#-34
	bl	__hardware_serial_println
CBLOCKEND 343 2 289

;;}
CLINEA 0000H 0001H 0121H 0001H 0001H
	pop	er8
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 343 1 289
CFUNCTIONEND 343


	rseg $$_hardware_serial2_println_double$serial
CFUNCTION 356

__hardware_serial2_println_double	:
CBLOCK 356 1 291

;;{
CLINEA 0000H 0001H 0123H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_data$2	set	4
	_tmp_c$0	set	-34
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-034
	push	xr4
	push	er8
	mov	r8,	r0
CBLOCK 356 2 291
CRET 002AH
CARGUMENT 46H 0001H 001CH "digit" 02H 00H 00H
CARGUMENT 43H 0008H 0004H "data" 02H 00H 04H
CLOCAL 43H 0021H 0022H 0002H "tmp_c" 05H 01H 21H 00H 00H 00H

;;	printFloat(tmp_c, data,digit);
CLINEA 0000H 0001H 0125H 0002H 001FH
	lea	_data$2[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r2,	r8
	mov	er0,	fp
	add	er0,	#-34
	bl	_printFloat
	add	sp,	#8 

;;	_hardware_serial2_println(tmp_c);
CLINEA 0000H 0001H 0126H 0002H 0022H
	mov	er0,	fp
	add	er0,	#-34
	bl	__hardware_serial2_println
CBLOCKEND 356 2 295

;;}
CLINEA 0000H 0001H 0127H 0001H 0001H
	pop	er8
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 356 1 295
CFUNCTIONEND 356


	rseg $$_hardware_serial_print_double$serial
CFUNCTION 342

__hardware_serial_print_double	:
CBLOCK 342 1 299

;;{
CLINEA 0000H 0001H 012BH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_data$2	set	4
	_tmp_c$0	set	-34
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-034
	push	xr4
	push	er8
	mov	r8,	r0
CBLOCK 342 2 299
CRET 002AH
CARGUMENT 46H 0001H 001CH "digit" 02H 00H 00H
CARGUMENT 43H 0008H 0004H "data" 02H 00H 04H
CLOCAL 43H 0021H 0022H 0002H "tmp_c" 05H 01H 21H 00H 00H 00H
CLOCAL 4AH 0001H 0000H 0002H "n" 02H 00H 00H

;;	printFloat(tmp_c,data,digit);
CLINEA 0000H 0001H 012EH 0002H 001EH
	lea	_data$2[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r2,	r8
	mov	er0,	fp
	add	er0,	#-34
	bl	_printFloat
	add	sp,	#8 

;;	_hardware_serial_print(tmp_c);
CLINEA 0000H 0001H 0133H 0002H 001FH
	mov	er0,	fp
	add	er0,	#-34
	bl	__hardware_serial_print
CBLOCKEND 342 2 308

;;}
CLINEA 0000H 0001H 0134H 0001H 0001H
	pop	er8
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 342 1 308
CFUNCTIONEND 342


	rseg $$_hardware_serial2_print_double$serial
CFUNCTION 355

__hardware_serial2_print_double	:
CBLOCK 355 1 310

;;{
CLINEA 0000H 0001H 0136H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_data$2	set	4
	_tmp_c$0	set	-34
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-034
	push	xr4
	push	er8
	mov	r8,	r0
CBLOCK 355 2 310
CRET 002AH
CARGUMENT 46H 0001H 001CH "digit" 02H 00H 00H
CARGUMENT 43H 0008H 0004H "data" 02H 00H 04H
CLOCAL 43H 0021H 0022H 0002H "tmp_c" 05H 01H 21H 00H 00H 00H
CLOCAL 4AH 0001H 0000H 0002H "n" 02H 00H 00H

;;	printFloat(tmp_c,data,digit);
CLINEA 0000H 0001H 0139H 0002H 001EH
	lea	_data$2[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r2,	r8
	mov	er0,	fp
	add	er0,	#-34
	bl	_printFloat
	add	sp,	#8 

;;	_hardware_serial2_print(tmp_c);
CLINEA 0000H 0001H 013EH 0002H 0020H
	mov	er0,	fp
	add	er0,	#-34
	bl	__hardware_serial2_print
CBLOCKEND 355 2 319

;;}
CLINEA 0000H 0001H 013FH 0001H 0001H
	pop	er8
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 355 1 319
CFUNCTIONEND 355


	rseg $$_hardware_serial_print$serial
CFUNCTION 338

__hardware_serial_print	:
CBLOCK 338 1 323

;;{
CLINEA 0000H 0001H 0143H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er8
	push	er4
	mov	er8,	er0
CBLOCK 338 2 323
CRET 0004H
CARGUMENT 47H 0002H 0028H "data" 04H 03H 00H 00H 00H
CLOCAL 47H 0002H 0026H 0002H "n" 02H 00H 01H

;;	int n = 0;
CLINEA 0000H 0001H 0144H 0002H 000BH
	mov	er4,	#0 	;; _ln$0

;;	while(data[n] != NULL)
CLINEA 0000H 0001H 0146H 0002H 0017H
	l	r0,	[er8]
	beq	_$L40
_$L41 :
CBLOCK 338 3 327

;;		if(uart_tx_write(data[n]) == 1)
CLINEA 0000H 0001H 0148H 0003H 0021H
	mov	er0,	er8
	add	er0,	er4
	l	r0,	[er0]
	bl	_uart_tx_write
	cmp	r0,	#01h
	cmpc	r1,	#00h
	bne	_$L43
CBLOCK 338 4 329

;;			n++;
CLINEA 0000H 0000H 014AH 0004H 0007H
	add	er4,	#1 
CBLOCKEND 338 4 331

;;		else
CLINEA 0000H 0001H 014CH 0003H 0006H
	bal	_$L45
_$L43 :
CBLOCK 338 5 333

;;			wdt_clear();
CLINEA 0000H 0001H 014EH 0004H 000FH
	bl	_wdt_clear

;;			lp_setHaltMode();
CLINEA 0000H 0001H 014FH 0004H 0014H
	bl	_lp_setHaltMode
CBLOCKEND 338 5 336

;;		}
CLINEA 0000H 0000H 0150H 0003H 0003H
_$L45 :
CBLOCKEND 338 3 337

;;	while(data[n] != NULL)
CLINEA 0000H 0000H 0146H 0000H 0000H
	mov	er0,	er8
	add	er0,	er4
	l	r0,	[er0]
	bne	_$L41

;;	}
CLINEA 0000H 0000H 0151H 0002H 0002H
_$L40 :
CBLOCKEND 338 2 339

;;}
CLINEA 0000H 0000H 0153H 0001H 0001H
	pop	er4
	pop	er8
	pop	pc
CBLOCKEND 338 1 339
CFUNCTIONEND 338


	rseg $$_hardware_serial2_print$serial
CFUNCTION 351

__hardware_serial2_print	:
CBLOCK 351 1 342

;;{
CLINEA 0000H 0001H 0156H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er8
	push	er4
	mov	er8,	er0
CBLOCK 351 2 342
CRET 0004H
CARGUMENT 47H 0002H 0028H "data" 04H 03H 00H 00H 00H
CLOCAL 47H 0002H 0026H 0002H "n" 02H 00H 01H

;;	int n = 0;
CLINEA 0000H 0001H 0157H 0002H 000BH
	mov	er4,	#0 	;; _ln$0

;;	while(data[n] != NULL)
CLINEA 0000H 0001H 0159H 0002H 0017H
	l	r0,	[er8]
	beq	_$L48
_$L49 :
CBLOCK 351 3 346

;;		if(uartf_tx_write(data[n]) == 1)
CLINEA 0000H 0001H 015BH 0003H 0022H
	mov	er0,	er8
	add	er0,	er4
	l	r0,	[er0]
	bl	_uartf_tx_write
	cmp	r0,	#01h
	cmpc	r1,	#00h
	bne	_$L51
CBLOCK 351 4 348

;;			n++;
CLINEA 0000H 0000H 015DH 0004H 0007H
	add	er4,	#1 
CBLOCKEND 351 4 350

;;		else
CLINEA 0000H 0001H 015FH 0003H 0006H
	bal	_$L53
_$L51 :
CBLOCK 351 5 352

;;			wdt_clear();
CLINEA 0000H 0001H 0161H 0004H 000FH
	bl	_wdt_clear

;;			lp_setHaltMode();
CLINEA 0000H 0001H 0162H 0004H 0014H
	bl	_lp_setHaltMode
CBLOCKEND 351 5 355

;;		}
CLINEA 0000H 0000H 0163H 0003H 0003H
_$L53 :
CBLOCKEND 351 3 356

;;	while(data[n] != NULL)
CLINEA 0000H 0000H 0159H 0000H 0000H
	mov	er0,	er8
	add	er0,	er4
	l	r0,	[er0]
	bne	_$L49

;;	}
CLINEA 0000H 0000H 0164H 0002H 0002H
_$L48 :
CBLOCKEND 351 2 358

;;}
CLINEA 0000H 0000H 0166H 0001H 0001H
	pop	er4
	pop	er8
	pop	pc
CBLOCKEND 351 1 358
CFUNCTIONEND 351


	rseg $$_hardware_serial_println$serial
CFUNCTION 339

__hardware_serial_println	:
CBLOCK 339 1 362

;;{
CLINEA 0000H 0001H 016AH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 339 2 362
CRET 0000H
CARGUMENT 47H 0002H 0024H "data" 04H 03H 00H 00H 00H
CSLOCAL 42H 0003H 0000H 0002H "s" 05H 01H 03H 00H 00H 00H

;;	_hardware_serial_print(data);
CLINEA 0000H 0001H 016CH 0002H 001EH
	bl	__hardware_serial_print

;;	_hardware_serial_print(s);
CLINEA 0000H 0001H 016DH 0002H 001BH
	mov	r0,	#BYTE1 OFFSET _$ST0
	mov	r1,	#BYTE2 OFFSET _$ST0
	bl	__hardware_serial_print
CBLOCKEND 339 2 366

;;}
CLINEA 0000H 0001H 016EH 0001H 0001H
	pop	pc
CBLOCKEND 339 1 366
CFUNCTIONEND 339


	rseg $$_hardware_serial2_println$serial
CFUNCTION 352

__hardware_serial2_println	:
CBLOCK 352 1 368

;;{
CLINEA 0000H 0001H 0170H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 352 2 368
CRET 0000H
CARGUMENT 47H 0002H 0024H "data" 04H 03H 00H 00H 00H
CSLOCAL 42H 0003H 0001H 0002H "s" 05H 01H 03H 00H 00H 00H

;;	_hardware_serial2_print(data);
CLINEA 0000H 0001H 0172H 0002H 001FH
	bl	__hardware_serial2_print

;;	_hardware_serial2_print(s);
CLINEA 0000H 0001H 0173H 0002H 001CH
	mov	r0,	#BYTE1 OFFSET _$ST1
	mov	r1,	#BYTE2 OFFSET _$ST1
	bl	__hardware_serial2_print
CBLOCKEND 352 2 372

;;}
CLINEA 0000H 0001H 0174H 0001H 0001H
	pop	pc
CBLOCKEND 352 1 372
CFUNCTIONEND 352

	public _Serial1
	public _Serial2
	public _Serial3
	public _Serial
	extrn code near : _uartf_rx_read
	extrn code near : _uart_gpio_init
	extrn code near : _uart_rx_read
	extrn code near : _uartf_begin
	extrn code near : _uartf_tx_write
	extrn code near : _uart_gpio_end
	extrn code near : _uart_peek
	extrn code near : _uart_tx_available
	extrn code near : _uart_rx_available
	extrn code near : _uart_flush
	extrn code near : _uart_begin
	extrn code near : _uart_end
	extrn code near : _wdt_clear
	extrn code near : _printFloat
	extrn code near : _uartf_flush
	extrn code near : _uartf_rx_available
	extrn code near : _uartf_tx_available
	extrn code near : _printNumber
	extrn code near : _lp_setHaltMode
	extrn code near : _uartf_end
	extrn code near : _uartf_peek
	extrn code near : _uart_tx_write
	extrn code near : _main

	rseg $$NINITTAB
	DB	"\x0d\x0a", 00H
	DB	"\x0d\x0a", 00H

	rseg $$TABSerial$serial
_Serial :
	dw	__hardware_serial12_begin
	dw	__hardware_serial12_end
	dw	_uart_rx_available
	dw	_uart_rx_read
	dw	_uart_peek
	dw	_uart_flush
	dw	__hardware_serial_print
	dw	__hardware_serial_println
	dw	__hardware_serial_print_long
	dw	__hardware_serial_println_long
	dw	__hardware_serial_print_double
	dw	__hardware_serial_println_double
	dw	__hardware_serial_tx_write
	dw	_uart_tx_write
	dw	_uart_tx_available

	rseg $$TABSerial1$serial
_Serial1 :
	dw	__hardware_serial21_begin
	dw	__hardware_serial21_end
	dw	_uartf_rx_available
	dw	_uartf_rx_read
	dw	_uartf_peek
	dw	_uartf_flush
	dw	__hardware_serial2_print
	dw	__hardware_serial2_println
	dw	__hardware_serial2_print_long
	dw	__hardware_serial2_println_long
	dw	__hardware_serial2_print_double
	dw	__hardware_serial2_println_double
	dw	__hardware_serial2_tx_write
	dw	_uartf_tx_write
	dw	_uartf_tx_available

	rseg $$TABSerial2$serial
_Serial2 :
	dw	__hardware_serial22_begin
	dw	__hardware_serial22_end
	dw	_uartf_rx_available
	dw	_uartf_rx_read
	dw	_uartf_peek
	dw	_uartf_flush
	dw	__hardware_serial2_print
	dw	__hardware_serial2_println
	dw	__hardware_serial2_print_long
	dw	__hardware_serial2_println_long
	dw	__hardware_serial2_print_double
	dw	__hardware_serial2_println_double
	dw	__hardware_serial2_tx_write
	dw	_uartf_tx_write
	dw	_uartf_tx_available

	rseg $$TABSerial3$serial
_Serial3 :
	dw	__hardware_serial23_begin
	dw	__hardware_serial23_end
	dw	_uartf_rx_available
	dw	_uartf_rx_read
	dw	_uartf_peek
	dw	_uartf_flush
	dw	__hardware_serial2_print
	dw	__hardware_serial2_println
	dw	__hardware_serial2_print_long
	dw	__hardware_serial2_println_long
	dw	__hardware_serial2_print_double
	dw	__hardware_serial2_println_double
	dw	__hardware_serial2_tx_write
	dw	_uartf_tx_write
	dw	_uartf_tx_available

	rseg $$NINITVAR
_$ST0 :
	ds	03h
_$ST1 :
	ds	03h

	end
